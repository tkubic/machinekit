# #######################################
#
# HAL file for BeagleBone + BeBoPr-Bridge cape with 4 steppers
# extruding is done via velocity control of the extruder motor
#
# Derived from example hm2-stepper config
#
# ########################################

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.bridge.sh


# ###################################
# Core EMC/HAL Loads
# ###################################

# kinematics
#loadrt trivkins
loadrt lineardeltakins 
#trajectory planner
loadrt tp

# settings for delta printer
setp lineardeltakins.L [MACHINE]CF_ROD
setp lineardeltakins.R [MACHINE]DELTA_R

loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES num_aio=5 tp=tp kins=lineardeltakins

# load low-level drivers
loadrt hal_bb_gpio output_pins=107,126,224,226 input_pins=108,109,110,114,117,118
loadrt [PRUCONF](DRIVER) prucode=$(LINUXCNC_HOME)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG)
loadrt delayline names=joints_delay,extruder_delay max_delay=20,5 samples=ffff,f
loadrt pid num_chan=3
loadrt limit1 count=2
loadrt pepper


# Python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# t = Thermistor table (only epcos_B57560G1104 or 1 supported for now)
# a = analog input channel
loadusr -Wn Therm ../ReadTemp.py -n Therm --num_chan 2 -t 1 1 -a 4 5

#used for comparing temperature set value with actual for waiting on temperature
loadrt wcomp count=2
loadrt sum2 count=5
loadrt mult2 count=5
loadrt abs count=6
loadrt hypot count=2
loadrt invert count=1
loadrt mux2 count=1
loadrt mux4 count=1
loadrt oneshot count=1
loadrt ddt count=5
loadrt lincurve count=1 personality=6
#loadrt lineardeltajointscartesian count=1
loadrt conv_s32_float count=1
loadrt integ count=2

# ################################################
# THREADS
# ################################################

addf [PRUCONF](DRIVER).capture-position   servo-thread
addf bb_gpio.read                         base-thread
addf motion-command-handler               servo-thread
addf motion-controller                    servo-thread
addf joints_delay.sample		  servo-thread
addf joints_delay.output		  servo-thread
addf extruder_delay.sample		  servo-thread
addf extruder_delay.output		  servo-thread
addf pid.0.do-pid-calcs                   servo-thread
addf pid.1.do-pid-calcs                   servo-thread
addf pid.2.do-pid-calcs                   servo-thread
addf limit1.0                             servo-thread
addf limit1.1                             servo-thread
addf [PRUCONF](DRIVER).update             servo-thread

addf wcomp.0                              servo-thread
addf wcomp.1                              servo-thread
addf sum2.0                               servo-thread
addf sum2.1                               servo-thread
addf sum2.2				  servo-thread
addf sum2.3				  servo-thread					  
addf sum2.4				  servo-thread
addf mult2.0                              servo-thread
addf mult2.1				  servo-thread
addf mult2.2				  servo-thread
addf mult2.3				  servo-thread
addf mult2.4				  servo-thread
addf abs.3				  servo-thread
addf abs.4			  	  servo-thread
addf abs.5			          servo-thread
addf hypot.1				  servo-thread
addf invert.0				  servo-thread
addf mux2.0				  servo-thread
addf mux4.0				  servo-thread
addf oneshot.0				  servo-thread
addf ddt.0				  servo-thread
addf ddt.4				  servo-thread
addf lincurve.0				  servo-thread
#addf lineardeltajointscartesian.0	  servo-thread
addf conv-s32-float.0			  servo-thread
addf integ.0				  servo-thread
addf integ.1				  servo-thread      

addf bb_gpio.write                        base-thread
addf pepper.update			  base-thread

setp joints_delay.enable FALSE
setp extruder_delay.enable FALSE

# ######################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################


# ################
# X [0] Axis = column C
# ################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out 
net emcmot.00.enable => [PRUCONF](DRIVER).stepgen.00.enable

# position command and feedback
#net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
#net emcmot.00.pos-cmd => [PRUCONF](DRIVER).stepgen.00.position-cmd
net axis-0-pos <= axis.0.motor-pos-cmd
net axis-0-pos => joints_delay.in0-flt
net axis-0-pos => axis.0.motor-pos-fb

net delayed-joint-0 joints_delay.out0-flt [PRUCONF](DRIVER).stepgen.00.position-cmd

#net motor.00.pos-fb <= [PRUCONF](DRIVER).stepgen.00.position-fb
#net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp [PRUCONF](DRIVER).stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp [PRUCONF](DRIVER).stepgen.00.dirhold         [AXIS_0]DIRHOLD

setp [PRUCONF](DRIVER).stepgen.00.steplen         [AXIS_0]STEPLEN
setp [PRUCONF](DRIVER).stepgen.00.stepspace       [AXIS_0]STEPSPACE

setp [PRUCONF](DRIVER).stepgen.00.position-scale  [AXIS_0]SCALE

setp [PRUCONF](DRIVER).stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp [PRUCONF](DRIVER).stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp [PRUCONF](DRIVER).stepgen.00.step_type       0
# P8.43 PRU1.out2
setp [PRUCONF](DRIVER).stepgen.00.steppin         0x4C
# P8.44 PRU1.out4
setp [PRUCONF](DRIVER).stepgen.00.dirpin          0x4D

# because column C is connected to the X-axis output
# the bebopr-bridge signal needs to be X-max means P8.9
net home-x bb_gpio.p8.in-09 => axis.0.home-sw-in
setp bb_gpio.p8.in-09.invert 1 

# ################
# Y [1] Axis = column A
# ################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE

net emcmot.01.enable <= axis.1.amp-enable-out 
net emcmot.01.enable => [PRUCONF](DRIVER).stepgen.01.enable

# position command and feedback
#net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
#net emcmot.01.pos-cmd => [PRUCONF](DRIVER).stepgen.01.position-cmd

net axis-1-pos <= axis.1.motor-pos-cmd
net axis-1-pos => joints_delay.in1-flt
net axis-1-pos => axis.1.motor-pos-fb

net delayed-joint-1 joints_delay.out1-flt [PRUCONF](DRIVER).stepgen.01.position-cmd

#net motor.01.pos-fb <= [PRUCONF](DRIVER).stepgen.01.position-fb
#net motor.01.pos-fb => axis.1.motor-pos-fb


# timing parameters
setp [PRUCONF](DRIVER).stepgen.01.dirsetup        [AXIS_1]DIRSETUP
setp [PRUCONF](DRIVER).stepgen.01.dirhold         [AXIS_1]DIRHOLD

setp [PRUCONF](DRIVER).stepgen.01.steplen         [AXIS_1]STEPLEN
setp [PRUCONF](DRIVER).stepgen.01.stepspace       [AXIS_1]STEPSPACE

setp [PRUCONF](DRIVER).stepgen.01.position-scale  [AXIS_1]SCALE

setp [PRUCONF](DRIVER).stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp [PRUCONF](DRIVER).stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

#setp [PRUCONF](DRIVER).stepgen.01.step_type       0
# P8.42 PRU1.out5
setp [PRUCONF](DRIVER).stepgen.01.steppin         0x4E
# P8.39 PRU1.out6
setp [PRUCONF](DRIVER).stepgen.01.dirpin          0x4F


# because column A is connected to the Y-axis output
# the bebopr-bridge signal needs to be Y-max means P8.14
net home-y bb_gpio.p8.in-14 => axis.1.home-sw-in
setp bb_gpio.p8.in-14.invert 1

# ################
# Z [2] Axis = column B
# ################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE

net emcmot.02.enable <= axis.2.amp-enable-out 
net emcmot.02.enable => [PRUCONF](DRIVER).stepgen.02.enable


# position command and feedback
#net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
#net emcmot.02.pos-cmd => [PRUCONF](DRIVER).stepgen.02.position-cmd

net axis-2-pos <= axis.2.motor-pos-cmd
net axis-2-pos => joints_delay.in2-flt
net axis-2-pos => axis.2.motor-pos-fb

net delayed-joint-2 joints_delay.out2-flt [PRUCONF](DRIVER).stepgen.02.position-cmd

#net motor.02.pos-fb <= [PRUCONF](DRIVER).stepgen.02.position-fb
#net motor.02.pos-fb => axis.2.motor-pos-fb


# timing parameters
setp [PRUCONF](DRIVER).stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp [PRUCONF](DRIVER).stepgen.02.dirhold         [AXIS_2]DIRHOLD

setp [PRUCONF](DRIVER).stepgen.02.steplen         [AXIS_2]STEPLEN
setp [PRUCONF](DRIVER).stepgen.02.stepspace       [AXIS_2]STEPSPACE

setp [PRUCONF](DRIVER).stepgen.02.position-scale  [AXIS_2]SCALE

setp [PRUCONF](DRIVER).stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp [PRUCONF](DRIVER).stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp [PRUCONF](DRIVER).stepgen.02.step_type       0
# P8.27 PRU1.out8
setp [PRUCONF](DRIVER).stepgen.02.steppin         0x50
# P8.29 PRU1.out9
setp [PRUCONF](DRIVER).stepgen.02.dirpin          0x51

# because column B is connected to the Z-axis output
# the bebopr-bridge signal needs to be Z-max means P8.18
net home-z bb_gpio.p8.in-18 => axis.2.home-sw-in
setp bb_gpio.p8.in-18.invert 1


# ################
# A [3] Axis (Extruder velocity controlled)
# ################
# axis enable chain
newsig emcmot.03.enable bit
sets emcmot.03.enable FALSE

net emcmot.03.enable <= axis.3.amp-enable-out
net emcmot.03.enable => [PRUCONF](DRIVER).stepgen.03.enable


net extruder-position <= axis.3.motor-pos-cmd
net extruder-position => extruder_delay.in0-flt
net extruder-position => axis.3.motor-pos-fb

net extruder-position => extruder_delay.in0-flt
net extruder-position-delayed extruder_delay.out0-flt => [PRUCONF](DRIVER).stepgen.03.position-cmd

#here i pass the value of the analog output from M67 E1 Q.. or M68 E1 Q.. to the multiplicator
net line-width  motion.analog-out-02 => mult2.0.in0
net line-height motion.analog-out-03 => mult2.0.in1
net line-cross-section mult2.0.out => mult2.1.in1

net joint-0-pos axis.0.joint-pos-cmd lineardeltajointscartesian.0.C-pos
net joint-1-pos axis.1.joint-pos-cmd lineardeltajointscartesian.0.A-pos
net joint-2-pos axis.2.joint-pos-cmd lineardeltajointscartesian.0.B-pos
setp lineardeltajointscartesian.0.ROD [MACHINE]CF_ROD
setp lineardeltajointscartesian.0.RAD [MACHINE]DELTA_R

net xpos lineardeltajointscartesian.0.x-pos => ddt.1.in
net xvel ddt.1.out abs.3.in
net xvel-abs abs.3.out => hypot.1.in0

net ypos lineardeltajointscartesian.0.y-pos => ddt.2.in
net yvel ddt.2.out abs.4.in
net yvel-abs abs.4.out => hypot.1.in1

net zpos lineardeltajointscartesian.0.z-pos => ddt.3.in
net zvel ddt.3.out abs.5.in
net zvel-abs abs.5.out => hypot.1.in2

#multiply area with speed and we get discharge (mm^3 per second)
#use this one (below when you have a lineardelta type machine
net motion-velocity motion.current-vel mult2.1.in0 joints_delay.in3-flt

net nozzle-discharge mult2.1.out => mult2.2.in0

#calculate filament cross section area
#PI divided by 4
setp mult2.3.in0 0.7854
setp mult2.4.in0 [EXTRUDER]DIA_FILAMENT
setp mult2.4.in1 [EXTRUDER]DIA_FILAMENT

net diameter-squared mult2.4.out => mult2.3.in1
net filament-area mult2.3.out => invert.0.in
net divide-by-filament-area invert.0.out => mult2.2.in1

setp mux4.0.in0 0
setp mux4.0.in1 -4
net extrude-rate mult2.2.out => mux4.0.in2
setp mux4.0.in3 4

# We want the retract-charge to run for a fixed time:
# when sel0 set to "1" meaning motion with extrusion" the on the rising edge
# there will temporarily be also sel1 which is high, meaning a pre-charge because the
# sel combination is 11
# when sel1 set to "0" meaning decoupling motion with extrusion" then the falling edge
# will trigger a 01 combination, meaning a retract
net trigger motion.digital-out-02 oneshot.0.in mux4.0.sel1
net pulse oneshot.0.out mux4.0.sel0 motion.feed-hold
setp oneshot.0.rising 1
setp oneshot.0.falling 1
setp oneshot.0.retriggerable 1
#by setting the width, the automatic retract/precharge can be disabled
net trigger-time motion.analog-out-04 => oneshot.0.width

#get readout from the current motion pin, used in PID loop extruder
net current-motion-type motion.current-motion

# get the extruder speed into lincurve.0 and integ.0
net extruder-speed mux4.0.out lincurve.0.in integ.0.in

# realtime precharge/retract for nozzle pressure adjustment
# the idea is to have the extruder motor follow with
# a _position_ offset. For this we need to have the difference 
# with the real output speed and the theoretical output speed
# integrated over time

# this "extra" area under the v-t diagram is the offset position
# and this position is controlled by a PID loop that has the extruder
# speed as output. This adjustment is done with the lincurve

# lincurve is used to calculate the absolute offset of the
# extruded filament as a function of speed tou counter the
# elasticity hysteresis of filament and other process variables.
# input speed
# output offset position in mm filament

setp lincurve.0.x-val-00 0.0
setp lincurve.0.x-val-01 0.45
setp lincurve.0.x-val-02 1.2
setp lincurve.0.x-val-03 2
setp lincurve.0.x-val-04 30
setp lincurve.0.x-val-05 40

setp lincurve.0.y-val-00 -0.085
setp lincurve.0.y-val-01 0.0
setp lincurve.0.y-val-02 0.072
setp lincurve.0.y-val-03 0.16
setp lincurve.0.y-val-04 0.16
setp lincurve.0.y-val-05 0.16


net extruder1-filament-offset <= lincurve.0.out
net extruder1-theor-pos <= integ.0.out
#add theor pos and offset
net extruder1-theor-pos => sum2.2.in0
net extruder1-filament-offset => sum2.2.in1

net position-to-speed sum2.2.out ddt.4.in

net extruder-velocity => sum2.4.in1

newsig man-speed-addition float
sets man-speed-addition 0
net man-speed-addition sum2.4.in0

#########
###todo
###manual extrusion with analog out 01 (velocity in mm/s) and mux2 selectable by digital input 01
#########

# timing parameters
setp [PRUCONF](DRIVER).stepgen.03.dirsetup        [AXIS_3]DIRSETUP
setp [PRUCONF](DRIVER).stepgen.03.dirhold         [AXIS_3]DIRHOLD

setp [PRUCONF](DRIVER).stepgen.03.steplen         [AXIS_3]STEPLEN
setp [PRUCONF](DRIVER).stepgen.03.stepspace       [AXIS_3]STEPSPACE

setp [PRUCONF](DRIVER).stepgen.03.position-scale  [AXIS_3]SCALE

setp [PRUCONF](DRIVER).stepgen.03.maxvel          [AXIS_3]STEPGEN_MAX_VEL
setp [PRUCONF](DRIVER).stepgen.03.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

setp [PRUCONF](DRIVER).stepgen.03.steppin         0x22
setp [PRUCONF](DRIVER).stepgen.03.dirpin          0x23


# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# create a signal for the estop loopback
net estop-loop iocontrol.0.user-enable-out => iocontrol.0.emc-enable-in

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# Machine power (BeBoPr I/O-Enable)
#
# Link pepper component as last item in io_enable chain
#
net estop-loop => pepper.io-ena.in
net io-enable pepper.io-ena.out => bb_gpio.p8.out-07 
setp bb_gpio.p8.out-07.invert 1

# feed stepper enables to pepper component
net emcmot.00.enable => pepper.stepper-ena.0.in
net emcmot.01.enable => pepper.stepper-ena.1.in
net emcmot.02.enable => pepper.stepper-ena.2.in
net emcmot.03.enable => pepper.stepper-ena.3.in
#net emcmot.04.enable => pepper.stepper-ena.4.in

# feed resulting enable outputs to bebopr
net ena1 pepper.enable-sck.out => bb_gpio.p9.out-26
net ena2 pepper.spindle-mosi.out => bb_gpio.p9.out-24
setp bb_gpio.p9.out-26.invert 1
setp bb_gpio.p9.out-24.invert 1

##
#  Set PEPPER configuration parameters
#
setp pepper.no-store [PEPPER]VOLATILE
setp pepper.cycle-time [EMCMOT]BASE_PERIOD

setp pepper.axis.0.micro-step [AXIS_0]MICRO_STEP
setp pepper.axis.1.micro-step [AXIS_1]MICRO_STEP
setp pepper.axis.2.micro-step [AXIS_2]MICRO_STEP
setp pepper.axis.3.micro-step [AXIS_3]MICRO_STEP
#setp pepper.axis.4.micro-step [AXIS_4]MICRO_STEP

setp pepper.axis.0.idle-current [AXIS_0]IDLE_CURRENT
setp pepper.axis.1.idle-current [AXIS_1]IDLE_CURRENT
setp pepper.axis.2.idle-current [AXIS_2]IDLE_CURRENT
setp pepper.axis.3.idle-current [AXIS_3]IDLE_CURRENT
#setp pepper.axis.4.idle-current [AXIS_4]IDLE_CURRENT

setp pepper.axis.0.active-current [AXIS_0]ACTIVE_CURRENT
setp pepper.axis.1.active-current [AXIS_1]ACTIVE_CURRENT
setp pepper.axis.2.active-current [AXIS_2]ACTIVE_CURRENT
setp pepper.axis.3.active-current [AXIS_3]ACTIVE_CURRENT
#setp pepper.axis.4.active-current [AXIS_4]ACTIVE_CURRENT

setp pepper.axis.0.idle-decay [AXIS_0]IDLE_DECAY
setp pepper.axis.1.idle-decay [AXIS_1]IDLE_DECAY
setp pepper.axis.2.idle-decay [AXIS_2]IDLE_DECAY
setp pepper.axis.3.idle-decay [AXIS_3]IDLE_DECAY
#setp pepper.axis.4.idle-decay [AXIS_4]IDLE_DECAY

setp pepper.axis.0.active-decay [AXIS_0]ACTIVE_DECAY
setp pepper.axis.1.active-decay [AXIS_1]ACTIVE_DECAY
setp pepper.axis.2.active-decay [AXIS_2]ACTIVE_DECAY
setp pepper.axis.3.active-decay [AXIS_3]ACTIVE_DECAY
#setp pepper.axis.4.active-decay [AXIS_4]ACTIVE_DECAY


# ##################################################
# PWM and Temperature Signals
# ##################################################

# Define signals to use elsewhere (ie: M1xx codes)
# If you change any names here, lots of things will break!
newsig e0.temp.set   float
newsig e0.temp.meas  float
newsig bed.temp.set  float
newsig bed.temp.meas float
newsig fan.speed.set float

setp hal_pru_generic.pwmgen.00.pwm_period       10000000

# J2 E0 Heater PRU1.out1
setp hal_pru_generic.pwmgen.00.out.00.pin       0x37
setp hal_pru_generic.pwmgen.00.out.00.enable    1
setp hal_pru_generic.pwmgen.00.out.00.value     0.0

#signals for comparing set value and actual value of temperature
#newsig M209_set_temp             float
newsig sub_temp_min               float
newsig add_temp_max               float
newsig e0_temp_within_range       bit

#set boundaries with sum2 +1 and -1 of the wanted temperature
net e0.temp.set  => sum2.0.in0
setp sum2.0.in1 2

net e0.temp.set  => sum2.1.in0
setp sum2.1.in1 -2

#the values will be given to the wcomp.0 function
net minboundary sum2.1.out => wcomp.0.min
net maxboundary sum2.0.out => wcomp.0.max
net e0.temp.meas => wcomp.0.in

#the output of wcomp.0 will say if measured temperature is in range of set value
#this needs to be coupled to a digital input for M66 readout
net e0_temp_within_range wcomp.0.out => motion.digital-in-00

# no longer J3 E1 Heater PRU1.out0
# instead used for FAN control
# we use scalse 255 for campatibility with slicing software
setp hal_pru_generic.pwmgen.00.out.01.pin       0x36
setp hal_pru_generic.pwmgen.00.out.01.enable    1
setp hal_pru_generic.pwmgen.00.out.01.value     0.0
setp hal_pru_generic.pwmgen.00.out.01.scale     255

#linking motion.analog-out-00 to fan speed.set.signal
net fan.speed.set <= motion.analog-out-00
net fan.speed.set => hal_pru_generic.pwmgen.00.out.01.value


# J4 Bed Heater GPIO2.16
setp hal_pru_generic.pwmgen.00.out.02.pin       0x52
setp hal_pru_generic.pwmgen.00.out.02.enable    1
setp hal_pru_generic.pwmgen.00.out.02.value     0.0

# PID for Extruder 0 temperature control
net e0.temp.meas    <= Therm.temp0
net e0.temp.meas    => pid.0.feedback

sets e0.temp.set  0
net e0.temp.set     => pid.0.command

net e0.heater  <= pid.0.output
net e0.heater  => limit1.0.in
net e0.heaterl <= limit1.0.out
net e0.heaterl => hal_pru_generic.pwmgen.00.out.00.value

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.0.min 0

# PID for Bed temperature control
net bed.temp.meas    <= Therm.temp1
net bed.temp.meas    => pid.1.feedback

sets bed.temp.set  0
net bed.temp.set     => pid.1.command

net bed.heater  <= pid.1.output
net bed.heater  => limit1.1.in
net bed.heaterl <= limit1.1.out
net bed.heaterl => hal_pru_generic.pwmgen.00.out.02.value

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.1.min 0

# if current motion type is Feed or Arc (2 or 3) then extruding bias
# see github.com/machinekit/machinekit/pull/165
# else take the bias for pause (otherwise temp will be too high)
setp wcomp.1.min 1
setp wcomp.1.max 4

net current-motion-type => conv-s32-float.0.in
net motion-type-float conv-s32-float.0.out => wcomp.1.in

net is-there-movement wcomp.1.out => mux2.0.sel
# true means Yes! that means mux2.0.out follows mux2.0.in1
# because the temperature will be too high in a pause, thus the
# wcomp for M66 to react will be off when printing a second part
# could be done with a lincurve, depending on the actual speed,
# but it's not _that_ critical.

#movement bias
setp mux2.0.in1 0.55
#pause bias
setp mux2.0.in0 0.42

# PID Parameters for adjusting temperature control
# Extruder
#setp pid.0.FF0      0  
#setp pid.0.FF1      0  
#setp pid.0.FF2      0  
setp pid.0.Pgain  0.022
setp pid.0.Igain  0.004
setp pid.0.Dgain  0.02
setp pid.0.maxerrorI 1.0
#setp pid.0.bias    0.55
net extruder-1-bias mux2.0.out => pid.0.bias
setp pid.0.enable   1

# Bed
#setp pid.1.FF0      0  
#setp pid.1.FF1      0  
#setp pid.1.FF2      0  
setp pid.1.Pgain  1
setp pid.1.Igain  0.0
setp pid.1.Dgain  0.0
setp pid.1.maxerrorI 1.0
setp pid.1.bias    0.5  
setp pid.1.enable   1

# extruder1 position loop
setp pid.2.Pgain  1000
setp pid.2.Igain  0.0
setp pid.2.Dgain  0.0
setp pid.2.maxerrorI 100
setp pid.2.maxerrorI 1.0
setp pid.2.bias    0  
setp pid.2.enable   1
